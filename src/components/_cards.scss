/** @format */

@use "../abstract/variables" as *;
@use "../abstract/mixins" as *;

.emby-scroller {
	overflow: visible !important;
	margin-top: 0.5em;
}

.layout-mobile .emby-scroller{
	overflow-x: scroll !important;
}
.card {
	contain: none !important;
	&.overflowSquareCard {
		.cardScalable {
			aspect-ratio: 1;
		}
		.cardImageContainer {
			&::after {
				background-size: contain !important;
			}
		}
	}
	&OverlayContainer {
		background: rgb(0 0 0 / 0.7);
	}
	&ImageIcon {
		@include cardIcon();
	}
	&Scalable {
		position: relative;
		aspect-ratio: auto;
		overflow: hidden;
		border-radius: $rounding-default $rounding-default 0 0;
		box-shadow: none !important;
		width: calc(100% + 1px);

		& > * {
			border-radius: 0 !important;
			width: 100%;
			box-shadow: none !important;
		}
		&:not(.imageEditorCard) .cardImageContainer {
			&::after,
			&::before {
				content: "";
				position: absolute;
				background: inherit;
			}
			&::after {
				background-size: cover;
				width: 100%;
				height: 100%;
				left: 0;
				transform: scale(1);
				z-index: -1;
				transition: transform $transition-time-fast-1 ease-in-out;
			}
			&::before {
				filter: blur(5px) brightness(50%);
				width: calc(100% + 20px);
				height: calc(100% + 20px);
				top: -10px;
				left: -10px;
				z-index: -1;
			}
		}
	}
	&:hover .cardImageContainer::after,
	&:focus-visible .cardImageContainer::after {
		transform: scale(1.1);
	}
	&.personCard {
		height: auto;
		.card {
			&Padder-overflowPortrait {
				// padding-bottom: 100% !important;
				.cardImageIcon {
					color: transparent !important;
				}
			}
			&Box {
				position: relative;
			}
			&Overlay {
				&Container {
					background: transparent !important;
					// height: calc(100% - 2.825em);
					z-index: 3;
				}

				&Button-br {
					right: 0.5em;
					bottom: 0.5em;
				}
			}
			&Content {
				filter: brightness(1);
				transition: filter $transition-time-default ease-in-out;
				$image-margin: 1em;
				margin: $image-margin !important;
				width: calc(100% - 2*$image-margin);
				height: calc(100% - 2*$image-margin);
				border-radius: 100% !important;
			}
			&Scalable {
				height: auto;
				aspect-ratio: 1;
				.cardImageContainer::after {
					background-size: cover;
				}
			}
			&Text {
			}
		}
	}
	&Box {
		$card-padding: 1.5em;
		margin: 0.5em $card-padding $card-padding 0 !important;
		box-shadow: 0 0 0.5em rgb(0 0 0 / 0.75);
		background: rgb(0 0 0 / 0.2);
		border-radius: $rounding-default;
		overflow: hidden;
		transition: background $transition-time-fast-1;
	}
	&:not([data-type="Person"]) .cardText-secondary {
		padding-bottom: 0.5em;
	}
	&:hover .cardBox,
	&:focus-visible .cardBox {
		background: rgb(0 0 0 / 0.5);
	}
	&.squareCard .cardScalable {
		width: 100%;
		padding-top: 100%;
	}
}
.card[data-userid] .cardScalable {
	padding-top: 0 !important;
	.cardContent {
		padding-top: 100% !important;
	}
}
.cardPadder {
	background: transparent !important;
	&-square {
		aspect-ratio: 0 !important;
		padding: 0;
	}
	&-square + div {
		aspect-ratio: 1;
	}
}
.cardImageContainer {
	&.defaultCardBackground {
		background: transparent;
	}
}
.innerCardFooter {
	width: 90%;
	margin-bottom: 5%;
	margin-left: auto;
	margin-right: auto;
	border-radius: $rounding-default;
	.itemProgressBar {
		background: rgb(255 255 255/0.3);
		height: 0.4em;
		.itemProgressBarForeground {
			background: $gradient-default;
		}
	}
}
.cardOverlayContainer {
	display: flex;
	flex-flow: column;
	flex-direction: column;
	flex-wrap: nowrap;
	align-content: center;
	justify-content: center;
	align-items: center;
}

.cardOverlayButton {
	border-radius: 100px !important;
	span {
		background: $gradient-icon !important;
		background-clip: text !important;
		-webkit-background-clip: text !important;
		transition: $transition-time-fast-1;
	}
	&[data-action="resume"] {
		border-radius: 1000px;
		padding: 1.5em;
		background: $gradient-default !important;
		color: white !important;
		&:hover,
		&:focus-visible {
			filter: brightness(0.5);
		}
	}
	&:hover,
	&:focus-visible {
		transform: scale(1) !important;
	}
}
.cardIndicators,
.listItemIndicators {
	@include indicator();
}
[data-isfolder="true"]:is(
		[data-type="CollectionFolder"],
		[data-type="UserView"]
	):not([data-type="Series"])
	.cardText {
	padding: 0.75em !important;
}
[data-collectiontype="livetv"] .cardText {
	padding: 0.75em !important;
}
.cardText:nth-child(4) {
	display: none;
}
.defaultCardBackground {
	background: $gradient-dark !important;
}
.chapterCard .innerCardFooter {
	backdrop-filter: none !important;
	background: rgb(0 0 0 / 0.6);
	border-radius: 0 1em 1em 0 !important;
}

.layout-mobile .cardOverlayButton {
	width: fit-content;
	background: rgb(0 0 0 / 0.5);
	backdrop-filter: none !important;
	border-radius: $rounding-default !important;
	bottom: 10px;
	right: 10px;
}
.devicesList {
	.cardScalable {
		aspect-ratio: 16/9;
	}
	.cardPadder {
		display: none;
	}
}

// commandPanel Selected card border

.itemSelectionPanel {
	border: 1px solid $jf-purple-light;
	border-radius: 10px;
	overflow: hidden;
	padding: 0.5em;
	background: linear-gradient(to bottom, rgb(0 0 0 / 0.75), transparent 21%);
}

// Fix image duplication in dialog cards

.dialogContainer .card {
	.cardImageContainer::before,
	.cardImageContainer::after {
		display: none !important;
	}
}
